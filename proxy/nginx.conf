worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    keepalive_timeout 65;

    server {
        listen 80;

        # Location that proxies requests to the application without auth check
        location = /auth {
            internal;
            proxy_pass http://auth-server/auth; 
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
        }

        # Login location does not require auth_request
        location /login/ {
            rewrite ^/login/(.*)$ /$1 break;
            proxy_pass http://auth-server;
            error_page 404 =302 /login/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            auth_request off;
        }

        # Main location that proxies requests to the application
        location / {
            auth_request /auth; 
            auth_request_set $auth_status $upstream_status;

            # Proxy settings for the application
            proxy_pass http://test-app:8000;  # Replace with your backend application URL

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Handle unauthorized access
            error_page 401 =302 ./login/;
            error_page 404 =302 ./;
        }
    }
}
